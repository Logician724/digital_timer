|digital_timer_top
seg_0[0] <= segment_display:HEX_0.port0
seg_0[1] <= segment_display:HEX_0.port0
seg_0[2] <= segment_display:HEX_0.port0
seg_0[3] <= segment_display:HEX_0.port0
seg_0[4] <= segment_display:HEX_0.port0
seg_0[5] <= segment_display:HEX_0.port0
seg_0[6] <= segment_display:HEX_0.port0
seg_0[7] <= segment_display:HEX_0.port0
seg_1[0] <= segment_display:HEX_1.port0
seg_1[1] <= segment_display:HEX_1.port0
seg_1[2] <= segment_display:HEX_1.port0
seg_1[3] <= segment_display:HEX_1.port0
seg_1[4] <= segment_display:HEX_1.port0
seg_1[5] <= segment_display:HEX_1.port0
seg_1[6] <= segment_display:HEX_1.port0
seg_1[7] <= segment_display:HEX_1.port0
clk_50MHz => clk_50MHz.IN1
reset => reset.IN1


|digital_timer_top|clk_generator:clk_2_50
clk_2MHz <= clk_2MHz~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk_50MHz => counter[0].CLK
clk_50MHz => counter[1].CLK
clk_50MHz => counter[2].CLK
clk_50MHz => counter[3].CLK
clk_50MHz => counter[4].CLK
clk_50MHz => counter[5].CLK
clk_50MHz => counter[6].CLK
clk_50MHz => counter[7].CLK
clk_50MHz => counter[8].CLK
clk_50MHz => counter[9].CLK
clk_50MHz => counter[10].CLK
clk_50MHz => counter[11].CLK
clk_50MHz => counter[12].CLK
clk_50MHz => counter[13].CLK
clk_50MHz => counter[14].CLK
clk_50MHz => counter[15].CLK
clk_50MHz => counter[16].CLK
clk_50MHz => counter[17].CLK
clk_50MHz => counter[18].CLK
clk_50MHz => counter[19].CLK
clk_50MHz => counter[20].CLK
clk_50MHz => counter[21].CLK
clk_50MHz => counter[22].CLK
clk_50MHz => counter[23].CLK
clk_50MHz => counter[24].CLK
clk_50MHz => clk_2MHz~reg0.CLK


|digital_timer_top|counter_99:digital_counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
reset => count[0]~reg0.ACLR
reset => count[1]~reg0.ACLR
reset => count[2]~reg0.ACLR
reset => count[3]~reg0.ACLR
reset => count[4]~reg0.ACLR
reset => count[5]~reg0.ACLR
reset => count[6]~reg0.ACLR
reset => count[7]~reg0.ACLR


|digital_timer_top|binary_to_BCD:bcd_encoder
binary[0] => ones[0].DATAIN
binary[1] => LessThan6.IN8
binary[1] => Add6.IN8
binary[1] => ones.DATAA
binary[2] => LessThan4.IN8
binary[2] => Add4.IN8
binary[2] => ones.DATAA
binary[3] => LessThan2.IN8
binary[3] => Add2.IN8
binary[3] => ones.DATAA
binary[4] => LessThan1.IN8
binary[4] => Add1.IN8
binary[4] => ones.DATAA
binary[5] => LessThan0.IN6
binary[5] => Add0.IN6
binary[5] => ones.DATAA
binary[6] => LessThan0.IN5
binary[6] => Add0.IN5
binary[6] => ones.DATAA
binary[7] => LessThan0.IN4
binary[7] => Add0.IN4
binary[7] => ones.DATAA
hundreds[0] <= tens.DB_MAX_OUTPUT_PORT_TYPE
hundreds[1] <= tens.DB_MAX_OUTPUT_PORT_TYPE
hundreds[2] <= <GND>
hundreds[3] <= <GND>
tens[0] <= ones.DB_MAX_OUTPUT_PORT_TYPE
tens[1] <= tens.DB_MAX_OUTPUT_PORT_TYPE
tens[2] <= tens.DB_MAX_OUTPUT_PORT_TYPE
tens[3] <= tens.DB_MAX_OUTPUT_PORT_TYPE
ones[0] <= binary[0].DB_MAX_OUTPUT_PORT_TYPE
ones[1] <= ones.DB_MAX_OUTPUT_PORT_TYPE
ones[2] <= ones.DB_MAX_OUTPUT_PORT_TYPE
ones[3] <= ones.DB_MAX_OUTPUT_PORT_TYPE


|digital_timer_top|segment_display:HEX_0
segment_code[0] <= segment_code[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
segment_code[1] <= segment_code[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
segment_code[2] <= segment_code[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
segment_code[3] <= segment_code[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
segment_code[4] <= segment_code[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
segment_code[5] <= segment_code[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
segment_code[6] <= segment_code[6]$latch.DB_MAX_OUTPUT_PORT_TYPE
segment_code[7] <= <VCC>
num[0] => Mux0.IN19
num[0] => Mux1.IN19
num[0] => Mux2.IN19
num[0] => Mux3.IN19
num[0] => Mux4.IN19
num[0] => Mux5.IN19
num[0] => Mux6.IN19
num[0] => Mux7.IN19
num[1] => Mux0.IN18
num[1] => Mux1.IN18
num[1] => Mux2.IN18
num[1] => Mux3.IN18
num[1] => Mux4.IN18
num[1] => Mux5.IN18
num[1] => Mux6.IN18
num[1] => Mux7.IN18
num[2] => Mux0.IN17
num[2] => Mux1.IN17
num[2] => Mux2.IN17
num[2] => Mux3.IN17
num[2] => Mux4.IN17
num[2] => Mux5.IN17
num[2] => Mux6.IN17
num[2] => Mux7.IN17
num[3] => Mux0.IN16
num[3] => Mux1.IN16
num[3] => Mux2.IN16
num[3] => Mux3.IN16
num[3] => Mux4.IN16
num[3] => Mux5.IN16
num[3] => Mux6.IN16
num[3] => Mux7.IN16


|digital_timer_top|segment_display:HEX_1
segment_code[0] <= segment_code[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
segment_code[1] <= segment_code[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
segment_code[2] <= segment_code[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
segment_code[3] <= segment_code[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
segment_code[4] <= segment_code[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
segment_code[5] <= segment_code[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
segment_code[6] <= segment_code[6]$latch.DB_MAX_OUTPUT_PORT_TYPE
segment_code[7] <= <VCC>
num[0] => Mux0.IN19
num[0] => Mux1.IN19
num[0] => Mux2.IN19
num[0] => Mux3.IN19
num[0] => Mux4.IN19
num[0] => Mux5.IN19
num[0] => Mux6.IN19
num[0] => Mux7.IN19
num[1] => Mux0.IN18
num[1] => Mux1.IN18
num[1] => Mux2.IN18
num[1] => Mux3.IN18
num[1] => Mux4.IN18
num[1] => Mux5.IN18
num[1] => Mux6.IN18
num[1] => Mux7.IN18
num[2] => Mux0.IN17
num[2] => Mux1.IN17
num[2] => Mux2.IN17
num[2] => Mux3.IN17
num[2] => Mux4.IN17
num[2] => Mux5.IN17
num[2] => Mux6.IN17
num[2] => Mux7.IN17
num[3] => Mux0.IN16
num[3] => Mux1.IN16
num[3] => Mux2.IN16
num[3] => Mux3.IN16
num[3] => Mux4.IN16
num[3] => Mux5.IN16
num[3] => Mux6.IN16
num[3] => Mux7.IN16


